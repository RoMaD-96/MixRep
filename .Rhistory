priorsd = priorsd,
x = alpha,
y = beta
)
out <- data.frame(x = wseq, density = marg_p_dens, rep_number = rep_number[index],
parameter = "'Weight parameter' ~ omega", tr = tr[index], sr = sr[index])
return(out)
}))
HPDI_weights <- do.call("rbind", lapply(X = seq(1, length(tr)), FUN = function(i) {
hpdi <- HPDI_post_m_weights(level = 0.95, tr = tr[i], sr = sr[i], to = to,
so = so, x = alpha, y = beta, null = null, priorsd = priorsd)
out <- data.frame(y = max(weights_m_post$density)*(1 + 0.05*i),
lower = hpdi[1], upper = hpdi[2], rep_number = rep_number[i],
parameter = "'Weight Parameter' ~ omega", tr = tr[i],
sr = sr[i], height = 0.2)
return(out)
}))
plot_weights_m_hpd <- ggplot() +
geom_errorbarh(data = HPDI_weights,
aes(xmin = lower, xmax = upper, y = y*1.05, color = factor(rep_number),
height = height), alpha = 0.8, size = 1.2) +
geom_line(data=weights_m_post, aes(x=x, y=density, group=rep_number, color=factor(rep_number)),
lty = 1, alpha = 0.9, size = 1.2) +
scale_color_manual(
values = c("1" = "#E69F00", "2" = "#009E20", "3" = "#0072B2"),
labels = c(expression(" "~hat(theta)[r*1] == 0.09 ~ ", " ~ sigma[r*1] == 0.04),
expression(" "~hat(theta)[r * 2] == 0.21 ~ ", " ~ sigma[r*2] == 0.06),
expression(" "~hat(theta)[r * 3] == 0.44 ~ ", " ~ sigma[r*3] == 0.04))) +
labs(
subtitle = "Marginal Posterior Densities of Weight Parameter",
x = expression(omega~" Values"),
y = "Density"
) +
theme_minimal() +
guides(color=guide_legend(title="Replicated Experiment"))
print(plot_weights_m_hpd)
theta_m_post <- do.call("rbind", lapply(X = seq(1:length(tr)), FUN = function(index) {
marg_p_dens <- m_post_theta(  theta = thetaseq,
tr = tr[index],
sr = sr[index],
to = to,
so = so,
null = null,
priorsd = priorsd,
x = alpha,
y = beta
)
out <- data.frame(x = thetaseq, density = marg_p_dens, rep_number = rep_number[index],
parameter = "'Effect parameter' ~ theta", tr = tr[index], sr = sr[index])
return(out)
}))
## Posterior of effect size without using original data
theta_m_post_2 <- do.call("rbind", lapply(X = seq(1, length(tr)), FUN = function(i) {
pDens <- dnorm(x = thetaseq, mean = tr[i], sd = sr[i])
out <- data.frame(x = thetaseq, density = pDens, rep_number = rep_number[i],
parameter = "'Effect size' ~ theta", tr = tr[i], sr = sr[i])
return(out)
}))
HPDI_theta <- do.call("rbind", lapply(X = seq(1, length(tr)), FUN = function(i) {
hpd <- HPDI_post_m_theta(level = 0.95, tr = tr[i], sr = sr[i], to = to,
so = so, x = alpha, y = beta, null = null, priorsd = priorsd)
out <- data.frame(y = max(c(theta_m_post_2$density, theta_m_post$density))*(1 + 0.06*i),
lower = hpd[1], upper = hpd[2], rep_number = rep_number[i],
parameter = "'Effect size' ~ theta", tr = tr[i],
sr = sr[i], height = 0.6)
return(out)
}))
HPDI_theta_2 <- do.call("rbind", lapply(X = seq(1, length(tr)), FUN = function(i) {
hpd <- tr[i] + c(-1, 1)*qnorm(p = 0.975)*sr[i]
out <- data.frame(y = max(c(theta_m_post_2$density, theta_m_post$density))*(1 + 0.05*i),
lower = hpd[1], upper = hpd[2], rep_number = rep_number[i],
parameter = "'Effect size' ~ theta", tr = tr[i],
sr = sr[i], height = 0.6)
return(out)
}))
HPDI_theta_2$trFormat <- paste0("{hat(theta)[italic('r')*", HPDI_theta_2$rnumber, "] == ",
round(HPDI_theta_2$tr, 2), "}*',' ~ sigma[italic('r')*",
HPDI_theta_2$rnumber, "] == ", round(HPDI_theta_2$sr, 2))
plot_m_theta <- ggplot() +
geom_errorbarh(data = HPDI_theta,
aes(xmin = lower, xmax = upper, y = y*1.05, color = factor(rep_number),
height = height), alpha = 0.8, size = 1.0) +
geom_errorbarh(data = HPDI_theta_2,
aes(xmin = lower, xmax = upper, y = y*1.05, color = factor(rep_number),
height = height), alpha = 0.7, linetype = "22", size = 1.0) +
geom_line(data = theta_m_post_2, aes(x = x, y = density, color = factor(rep_number)),
lty = 22, alpha = 0.5, size = 1.0) +
geom_line(data = theta_m_post, aes(x = x, y = density, color = factor(rep_number)),
alpha = 0.9, size = 1.0) +
scale_color_manual(
values = c("1" = "#E69F00", "2" = "#009E20", "3" = "#0072B2"),
labels = c(expression(" "~hat(theta)[r*1] == 0.09 ~ ", " ~ sigma[r*1] == 0.04),
expression(" "~hat(theta)[r * 2] == 0.21 ~ ", " ~ sigma[r*2] == 0.06),
expression(" "~hat(theta)[r * 3] == 0.44 ~ ", " ~ sigma[r*3] == 0.04))) +
labs(
subtitle = "Marginal Posterior Densities of Effect Parameter",
x = expression(theta~" Values"),
y = "Density"
) +
theme_minimal() +
guides(color=guide_legend(title="Replicated Experiment"))
print(plot_m_theta)
# z-value for 95% CI
z_value <- qnorm(0.975)
# Calculate 95% CI for each group
ci_o <- c(to - z_value * so, to + z_value * so)
ci_r1 <- c(tr[1] - z_value * sr[1], tr[1] + z_value * sr[1])
ci_r2 <- c(tr[2] - z_value * sr[2], tr[2] + z_value * sr[2])
ci_r3 <- c(tr[3] - z_value * sr[3], tr[3] + z_value * sr[3])
# Create a data frame
data <- data.frame(
group = c("Theta_o", "Theta_r1", "Theta_r2", "Theta_r3"),
estimate = c(to, tr[1], tr[2], tr[3]),
ymin = c(ci_o[1], ci_r1[1], ci_r2[1], ci_r3[1]),
ymax = c(ci_o[2], ci_r1[2], ci_r2[2], ci_r3[2]),
color = c("#CE1622", "#E69F00", "#009E20", "#0072B2")
)
# Plot
ggplot(data) +
geom_point(aes(x = group, y = estimate, color = group), shape = 16, fill = "white", size = 4) +
geom_errorbar(aes(x = group, ymin = ymin, ymax = ymax, color = group), width = 0.15, size = 1) +
scale_color_manual(values = data$color) +
labs(
y = "Estimate Value") +
scale_color_manual(
values = c("Theta_o" = "#CE1622" ,"Theta_r1" = "#E69F00", "Theta_r2" = "#009E20", "Theta_r3" = "#0072B2"),
labels = c(expression(" "~hat(theta)[o] == 0.21 ~ ", " ~ sigma[o] == 0.05),
expression(" "~hat(theta)[r*1] == 0.09 ~ ", " ~ sigma[r*1] == 0.04),
expression(" "~hat(theta)[r * 2] == 0.21 ~ ", " ~ sigma[r*2] == 0.06),
expression(" "~hat(theta)[r * 3] == 0.44 ~ ", " ~ sigma[r*3] == 0.04))) +
theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "top",
legend.title = element_blank()
)
# Plot
ggplot(data) +
geom_point(aes(x = group, y = estimate, color = group), shape = 16, fill = "white", size = 4) +
geom_errorbar(aes(x = group, ymin = ymin, ymax = ymax, color = group), width = 0.15, size = 1) +
scale_color_manual(values = data$color) +
labs(
y = "Estimate Value") +
scale_color_manual(
values = c("Theta_o" = "#CE1622" ,"Theta_r1" = "#E69F00", "Theta_r2" = "#009E20", "Theta_r3" = "#0072B2"),
labels = c(expression(" "~hat(theta)[o] == 0.21 ~ ", " ~ sigma[o] == 0.05),
expression(" "~hat(theta)[r*1] == 0.09 ~ ", " ~ sigma[r*1] == 0.04),
expression(" "~hat(theta)[r * 2] == 0.21 ~ ", " ~ sigma[r*2] == 0.06),
expression(" "~hat(theta)[r * 3] == 0.44 ~ ", " ~ sigma[r*3] == 0.04))) +
theme_bw() +
theme(
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "top",
legend.title = element_blank()
)
# Plot
ggplot(data) +
geom_point(aes(x = group, y = estimate, color = group), shape = 16, fill = "white", size = 4) +
geom_errorbar(aes(x = group, ymin = ymin, ymax = ymax, color = group), width = 0.15, size = 1) +
scale_color_manual(values = data$color) +
labs(
y = "Estimate Value") +
scale_color_manual(
values = c("Theta_o" = "#CE1622" ,"Theta_r1" = "#E69F00", "Theta_r2" = "#009E20", "Theta_r3" = "#0072B2"),
labels = c(expression(" "~hat(theta)[o] == 0.21 ~ ", " ~ sigma[o] == 0.05),
expression(" "~hat(theta)[r*1] == 0.09 ~ ", " ~ sigma[r*1] == 0.04),
expression(" "~hat(theta)[r * 2] == 0.21 ~ ", " ~ sigma[r*2] == 0.06),
expression(" "~hat(theta)[r * 3] == 0.44 ~ ", " ~ sigma[r*3] == 0.04))) +
theme_classic() +
theme(
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "top",
legend.title = element_blank()
)
# Plot
ggplot(data) +
geom_point(aes(x = group, y = estimate, color = group), shape = 16, fill = "white", size = 4) +
geom_errorbar(aes(x = group, ymin = ymin, ymax = ymax, color = group), width = 0.15, size = 1) +
scale_color_manual(values = data$color) +
labs(
y = "Estimate Value") +
scale_color_manual(
values = c("Theta_o" = "#CE1622" ,"Theta_r1" = "#E69F00", "Theta_r2" = "#009E20", "Theta_r3" = "#0072B2"),
labels = c(expression(" "~hat(theta)[o] == 0.21 ~ ", " ~ sigma[o] == 0.05),
expression(" "~hat(theta)[r*1] == 0.09 ~ ", " ~ sigma[r*1] == 0.04),
expression(" "~hat(theta)[r * 2] == 0.21 ~ ", " ~ sigma[r*2] == 0.06),
expression(" "~hat(theta)[r * 3] == 0.44 ~ ", " ~ sigma[r*3] == 0.04))) +
theme_void() +
theme(
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "top",
legend.title = element_blank()
)
# Plot
ggplot(data) +
geom_point(aes(x = group, y = estimate, color = group), shape = 16, fill = "white", size = 4) +
geom_errorbar(aes(x = group, ymin = ymin, ymax = ymax, color = group), width = 0.15, size = 1) +
scale_color_manual(values = data$color) +
labs(
y = "Estimate Value") +
scale_color_manual(
values = c("Theta_o" = "#CE1622" ,"Theta_r1" = "#E69F00", "Theta_r2" = "#009E20", "Theta_r3" = "#0072B2"),
labels = c(expression(" "~hat(theta)[o] == 0.21 ~ ", " ~ sigma[o] == 0.05),
expression(" "~hat(theta)[r*1] == 0.09 ~ ", " ~ sigma[r*1] == 0.04),
expression(" "~hat(theta)[r * 2] == 0.21 ~ ", " ~ sigma[r*2] == 0.06),
expression(" "~hat(theta)[r * 3] == 0.44 ~ ", " ~ sigma[r*3] == 0.04))) +
theme_classic2() +
theme(
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "top",
legend.title = element_blank()
)
# Plot
ggplot(data) +
geom_point(aes(x = group, y = estimate, color = group), shape = 16, fill = "white", size = 4) +
geom_errorbar(aes(x = group, ymin = ymin, ymax = ymax, color = group), width = 0.15, size = 1) +
scale_color_manual(values = data$color) +
labs(
y = "Estimate Value") +
scale_color_manual(
values = c("Theta_o" = "#CE1622" ,"Theta_r1" = "#E69F00", "Theta_r2" = "#009E20", "Theta_r3" = "#0072B2"),
labels = c(expression(" "~hat(theta)[o] == 0.21 ~ ", " ~ sigma[o] == 0.05),
expression(" "~hat(theta)[r*1] == 0.09 ~ ", " ~ sigma[r*1] == 0.04),
expression(" "~hat(theta)[r * 2] == 0.21 ~ ", " ~ sigma[r*2] == 0.06),
expression(" "~hat(theta)[r * 3] == 0.44 ~ ", " ~ sigma[r*3] == 0.04))) +
theme_get() +
theme(
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "top",
legend.title = element_blank()
)
# Plot
ggplot(data) +
geom_point(aes(x = group, y = estimate, color = group), shape = 16, fill = "white", size = 4) +
geom_errorbar(aes(x = group, ymin = ymin, ymax = ymax, color = group), width = 0.15, size = 1) +
scale_color_manual(values = data$color) +
labs(
y = "Estimate Value") +
scale_color_manual(
values = c("Theta_o" = "#CE1622" ,"Theta_r1" = "#E69F00", "Theta_r2" = "#009E20", "Theta_r3" = "#0072B2"),
labels = c(expression(" "~hat(theta)[o] == 0.21 ~ ", " ~ sigma[o] == 0.05),
expression(" "~hat(theta)[r*1] == 0.09 ~ ", " ~ sigma[r*1] == 0.04),
expression(" "~hat(theta)[r * 2] == 0.21 ~ ", " ~ sigma[r*2] == 0.06),
expression(" "~hat(theta)[r * 3] == 0.44 ~ ", " ~ sigma[r*3] == 0.04))) +
theme_dark() +
theme(
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "top",
legend.title = element_blank()
)
# Plot
ggplot(data) +
geom_point(aes(x = group, y = estimate, color = group), shape = 16, fill = "white", size = 4) +
geom_errorbar(aes(x = group, ymin = ymin, ymax = ymax, color = group), width = 0.15, size = 1) +
scale_color_manual(values = data$color) +
labs(
y = "Estimate Value") +
scale_color_manual(
values = c("Theta_o" = "#CE1622" ,"Theta_r1" = "#E69F00", "Theta_r2" = "#009E20", "Theta_r3" = "#0072B2"),
labels = c(expression(" "~hat(theta)[o] == 0.21 ~ ", " ~ sigma[o] == 0.05),
expression(" "~hat(theta)[r*1] == 0.09 ~ ", " ~ sigma[r*1] == 0.04),
expression(" "~hat(theta)[r * 2] == 0.21 ~ ", " ~ sigma[r*2] == 0.06),
expression(" "~hat(theta)[r * 3] == 0.44 ~ ", " ~ sigma[r*3] == 0.04))) +
theme_bw() +
theme(
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "top",
legend.title = element_blank()
)
postdens_wrapper$rep_setting <-paste0( "{hat(theta)[italic('r')*",
postdens_wrapper$rep_number,
"] == ",
round(postdens_wrapper$tr, 2),
"}*',' ~ sigma[italic('r')*",
postdens_wrapper$rep_number,
"] == ",
round(postdens_wrapper$sr, 2)
)
plot_joint <- ggplot(data = postdens_wrapper, aes(x = theta, y = omega, fill = density)) +
facet_wrap(~ rep_setting, labeller = label_parsed) +
geom_raster(interpolate = TRUE) +
geom_contour(aes(z = density), breaks = seq(0, 24, 3),  alpha = 0.35, size = 0.5) +
scale_fill_continuous_sequential(palette = "Blues 3", rev = TRUE) +
labs(
subtitle = "Joint Posterior Contour Plot Considering Three Replications Scenario",
x = bquote("Effect Size" ~ theta),
y = bquote("Weight Parameter" ~ omega),
fill = "Posterior \n Density"
) +
guides(fill = guide_colorbar(barheight = 12, barwidth = 0.9, title.position = "top")) +
theme_bw()
print(plot_joint)
plot_weights_m_hpd <- ggplot() +
geom_errorbarh(data = HPDI_weights,
aes(xmin = lower, xmax = upper, y = y*1.05, color = factor(rep_number),
height = height), alpha = 0.8, size = 1.2) +
geom_line(data=weights_m_post, aes(x=x, y=density, group=rep_number, color=factor(rep_number)),
lty = 1, alpha = 0.9, size = 1.2) +
scale_color_manual(
values = c("1" = "#E69F00", "2" = "#009E20", "3" = "#0072B2"),
labels = c(expression(" "~hat(theta)[r*1] == 0.09 ~ ", " ~ sigma[r*1] == 0.04),
expression(" "~hat(theta)[r * 2] == 0.21 ~ ", " ~ sigma[r*2] == 0.06),
expression(" "~hat(theta)[r * 3] == 0.44 ~ ", " ~ sigma[r*3] == 0.04))) +
labs(
subtitle = "Marginal Posterior Densities of Weight Parameter",
x = expression(omega~" Values"),
y = "Density"
) +
theme_bw() +
guides(color=guide_legend(title="Replicated Experiment"))
print(plot_weights_m_hpd)
plot_m_theta <- ggplot() +
geom_errorbarh(data = HPDI_theta,
aes(xmin = lower, xmax = upper, y = y*1.05, color = factor(rep_number),
height = height), alpha = 0.8, size = 1.0) +
geom_errorbarh(data = HPDI_theta_2,
aes(xmin = lower, xmax = upper, y = y*1.05, color = factor(rep_number),
height = height), alpha = 0.7, linetype = "22", size = 1.0) +
geom_line(data = theta_m_post_2, aes(x = x, y = density, color = factor(rep_number)),
lty = 22, alpha = 0.5, size = 1.0) +
geom_line(data = theta_m_post, aes(x = x, y = density, color = factor(rep_number)),
alpha = 0.9, size = 1.0) +
scale_color_manual(
values = c("1" = "#E69F00", "2" = "#009E20", "3" = "#0072B2"),
labels = c(expression(" "~hat(theta)[r*1] == 0.09 ~ ", " ~ sigma[r*1] == 0.04),
expression(" "~hat(theta)[r * 2] == 0.21 ~ ", " ~ sigma[r*2] == 0.06),
expression(" "~hat(theta)[r * 3] == 0.44 ~ ", " ~ sigma[r*3] == 0.04))) +
labs(
subtitle = "Marginal Posterior Densities of Effect Parameter",
x = expression(theta~" Values"),
y = "Density"
) +
theme_bw() +
guides(color=guide_legend(title="Replicated Experiment"))
print(plot_m_theta)
# Plot
ggplot(data) +
geom_point(aes(x = group, y = estimate, color = group), shape = 16, fill = "white", size = 4) +
geom_errorbar(aes(x = group, ymin = ymin, ymax = ymax, color = group), width = 0.15, size = 1) +
scale_color_manual(values = data$color) +
labs(
y = "Estimate Value") +
scale_color_manual(
values = c("Theta_o" = "#CE1622" ,"Theta_r1" = "#E69F00", "Theta_r2" = "#009E20", "Theta_r3" = "#0072B2"),
labels = c(expression(" "~hat(theta)[o] == 0.21 ~ ", " ~ sigma[o] == 0.05),
expression(" "~hat(theta)[r*1] == 0.09 ~ ", " ~ sigma[r*1] == 0.04),
expression(" "~hat(theta)[r * 2] == 0.21 ~ ", " ~ sigma[r*2] == 0.06),
expression(" "~hat(theta)[r * 3] == 0.44 ~ ", " ~ sigma[r*3] == 0.04))) +
theme_bw() +
theme(
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "top",
legend.title = element_blank()
)
# Plot
plot_theta <- ggplot(data) +
geom_point(aes(x = group, y = estimate, color = group), shape = 16, fill = "white", size = 4) +
geom_errorbar(aes(x = group, ymin = ymin, ymax = ymax, color = group), width = 0.15, size = 1) +
scale_color_manual(values = data$color) +
labs(
y = "Effect Size Estimate") +
scale_color_manual(
values = c("Theta_o" = "#CE1622" ,"Theta_r1" = "#E69F00", "Theta_r2" = "#009E20", "Theta_r3" = "#0072B2"),
labels = c(expression(" "~hat(theta)[o] == 0.21 ~ ", " ~ sigma[o] == 0.05),
expression(" "~hat(theta)[r*1] == 0.09 ~ ", " ~ sigma[r*1] == 0.04),
expression(" "~hat(theta)[r * 2] == 0.21 ~ ", " ~ sigma[r*2] == 0.06),
expression(" "~hat(theta)[r * 3] == 0.44 ~ ", " ~ sigma[r*3] == 0.04))) +
theme_bw() +
theme(
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "top",
legend.title = element_blank()
)
print(plot_theta)
library(ggplot2)
library(ggpubr)
library(colorspace)
source("RepMixFun.R")
# Original and Replicated Studies
to <- 0.21
so <- 0.05
tr <- c(0.09, 0.21, 0.44)
sr <- c(0.045, 0.06, 0.04)
null <- 0
priorsd <- 2
# Parameter Grid
n_weights <- 300
n_theta <- 300
wseq <- seq(0, 1, length.out = n_weights)
thetaseq <- seq(-0.2, 0.6, length.out = n_theta)
par_grid <- expand.grid(omega = wseq, theta = thetaseq)
# Uniform Prior
alpha <- 1
beta <- 1
# Replication Number
rep_number <- c(1,2,3)
# z-value for 95% CI
z_value <- qnorm(0.975)
# Calculate 95% CI for each group
ci_o <- c(to - z_value * so, to + z_value * so)
ci_r1 <- c(tr[1] - z_value * sr[1], tr[1] + z_value * sr[1])
ci_r2 <- c(tr[2] - z_value * sr[2], tr[2] + z_value * sr[2])
ci_r3 <- c(tr[3] - z_value * sr[3], tr[3] + z_value * sr[3])
# Create a data frame
data <- data.frame(
group = c("Theta_o", "Theta_r1", "Theta_r2", "Theta_r3"),
estimate = c(to, tr[1], tr[2], tr[3]),
ymin = c(ci_o[1], ci_r1[1], ci_r2[1], ci_r3[1]),
ymax = c(ci_o[2], ci_r1[2], ci_r2[2], ci_r3[2]),
color = c("black", "#E69F00", "#009E20", "#0072B2")
)
# Plot
plot_theta <- ggplot(data) +
geom_point(aes(x = group, y = estimate, color = group), shape = 16, fill = "white", size = 4.5) +
geom_errorbar(aes(x = group, ymin = ymin, ymax = ymax, color = group), width = 0.15, size = 1.8) +
scale_color_manual(values = data$color) +
labs(
y = "Effect Size Estimate") +
scale_color_manual(
values = c("Theta_o" = "black" ,"Theta_r1" = "#E69F00", "Theta_r2" = "#009E20", "Theta_r3" = "#0072B2"),
labels = c(expression(" "~hat(theta)[o] == 0.21 ~ ", " ~ sigma[o] == 0.05),
expression(" "~hat(theta)[r*1] == 0.09 ~ ", " ~ sigma[r*1] == 0.04),
expression(" "~hat(theta)[r * 2] == 0.21 ~ ", " ~ sigma[r*2] == 0.06),
expression(" "~hat(theta)[r * 3] == 0.44 ~ ", " ~ sigma[r*3] == 0.04))) +
theme_bw() +
theme(
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "top",
legend.title = element_blank(),
axis.text.y = element_text(size = 18),
axis.title.y = element_text(size = 22),
legend.text = element_text(size = 18)
)
print(plot_theta)
ggsave(filename = "plot_theta.jpg",path = "Plots", plot = plot_theta,
width = 13, height = 7, device='tiff', dpi=400)
# Calculate 95% CI for each group
ci_o <- c(to - z_value * so, to + z_value * so)
ci_r1 <- c(tr[1] - z_value * sr[1], tr[1] + z_value * sr[1])
ci_r2 <- c(tr[2] - z_value * sr[2], tr[2] + z_value * sr[2])
ci_r3 <- c(tr[3] - z_value * sr[3], tr[3] + z_value * sr[3])
# Create a data frame
data <- data.frame(
group = c("Theta_o", "Theta_r1", "Theta_r2", "Theta_r3"),
estimate = c(to, tr[1], tr[2], tr[3]),
ymin = c(ci_o[1], ci_r1[1], ci_r2[1], ci_r3[1]),
ymax = c(ci_o[2], ci_r1[2], ci_r2[2], ci_r3[2]),
color = c("#8A0404", "#E69F00", "#009E20", "#0072B2")
)
# Plot
plot_theta <- ggplot(data) +
geom_point(aes(x = group, y = estimate, color = group), shape = 16, fill = "white", size = 4.5) +
geom_errorbar(aes(x = group, ymin = ymin, ymax = ymax, color = group), width = 0.15, size = 1.8) +
scale_color_manual(values = data$color) +
labs(
y = "Effect Size Estimate") +
scale_color_manual(
values = c("Theta_o" = "#8A0404" ,"Theta_r1" = "#E69F00", "Theta_r2" = "#009E20", "Theta_r3" = "#0072B2"),
labels = c(expression(" "~hat(theta)[o] == 0.21 ~ ", " ~ sigma[o] == 0.05),
expression(" "~hat(theta)[r*1] == 0.09 ~ ", " ~ sigma[r*1] == 0.04),
expression(" "~hat(theta)[r * 2] == 0.21 ~ ", " ~ sigma[r*2] == 0.06),
expression(" "~hat(theta)[r * 3] == 0.44 ~ ", " ~ sigma[r*3] == 0.04))) +
theme_bw() +
theme(
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "top",
legend.title = element_blank(),
axis.text.y = element_text(size = 18),
axis.title.y = element_text(size = 22),
legend.text = element_text(size = 18)
)
print(plot_theta)
ggsave(filename = "plot_theta.jpg",path = "Plots", plot = plot_theta,
width = 13, height = 7, device='tiff', dpi=400)
ggsave(filename = "plot_theta.jpg",path = "Plots", plot = plot_theta,
width = 13, height = 7, device='tiff', dpi=400)
